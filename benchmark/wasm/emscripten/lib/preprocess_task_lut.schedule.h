#ifndef preprocess_task_lut_SCHEDULE_H
#define preprocess_task_lut_SCHEDULE_H

// MACHINE GENERATED -- DO NOT EDIT
// This schedule was automatically generated by Adams2019
// for target=wasm-32-wasmrt-wasm_bulk_memory  // NOLINT
// with machine_params=8,16777216,10

#include "Halide.h"


inline void apply_schedule_preprocess_task_lut(
    ::Halide::Pipeline pipeline,
    ::Halide::Target target
) {
    using ::Halide::Func;
    using ::Halide::MemoryType;
    using ::Halide::RVar;
    using ::Halide::TailStrategy;
    using ::Halide::Var;
    Func output = pipeline.get_func(2);
    Func f0 = pipeline.get_func(0);
    Var c(output.get_schedule().dims()[2].var);
    Var i(f0.get_schedule().dims()[0].var);
    Var ii("ii");
    Var x(output.get_schedule().dims()[0].var);
    Var y(output.get_schedule().dims()[1].var);
    Var yi("yi");
    output
        .split(y, y, yi, 17, TailStrategy::ShiftInwards)
        .vectorize(c)
        .compute_root()
        .reorder({c, x, yi, y})
        .parallel(y)
        .reorder_storage(c, x, y);
    f0
        .split(i, i, ii, 32, TailStrategy::RoundUp)
        .vectorize(ii)
        .compute_root()
        .reorder({ii, i})
        .parallel(i);

}

#endif  // preprocess_task_lut_SCHEDULE_H
